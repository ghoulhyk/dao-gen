{{.AUTO_GENERATED_ANNOTATION}}

package {{.packages.fields.RefName}}

import (
	{{.packages.base.ImportStatement}}
	{{.packages.baseCond.ImportStatement}}
	"strings"
	"fmt"
)

type {{.structName.fields}} struct {
	_tableInfo *{{.packages.base.RefName}}.TableInfo
	fields     []*{{.packages.baseCond.RefName}}.FieldCond
}

func {{.constructorName.fields}}(tableInfo *{{.packages.base.RefName}}.TableInfo) *{{.structName.fields}} {
	return &{{.structName.fields}}{
		_tableInfo: tableInfo,
	}
}

func (receiver {{.structName.fields}}) GetFieldList() string {
	var columns []string
	for _, field := range receiver.fields {
		columns = append(columns, field.Sql())
	}
	return strings.Join(columns, ", ")
}

func (receiver *{{.structName.fields}}) tableName() string {
	tableName := ""
	if receiver._tableInfo != nil && receiver._tableInfo.Alias != "" {
		tableName = receiver._tableInfo.Alias
		tableName = fmt.Sprintf("`%s`.", tableName)
	}
	return tableName
}

{{ range .column }}
    {{ template "filedFuncTmpl" . }}
{{ end }}
